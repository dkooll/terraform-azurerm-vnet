name: Tag and create a GitHub release

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:
    inputs:
      sourceBranchName:
        description: Name of the source branch, to determine semver (usually github.head_ref).
        required: true
        type: string
      releaseNotesIntro:
        description: Text to prepend to the release log
        required: true
        type: string
      majorBranchPrefix:
        description: Prefix of branches that bump a major version.
        default: release/
        required: false
        type: string
      minorBranchPrefix:
        description: Prefix of branches that bump a minor version.
        default: feature/
        required: false
        type: string
      patchBranchPrefix:
        description: Prefix of branches that bump a patch version.
        default: bugfix/
        required: false
        type: string
    outputs:
      releaseVersion:
        description: "The released version number"
        value: ${{ jobs.release.outputs.releaseVersion }}

jobs:
  release:
    name: job_module_create_release
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{ steps.semver.outputs.next }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get version
        id: semver
        shell: bash
        run: |
          LATEST=$(git describe --abbrev=0 --tags 2>/dev/null || echo "0.0.0")
          # Split up according to semver
          SEMVER=(${LATEST//./ })
          MAJOR=${SEMVER[0]}
          MINOR=${SEMVER[1]}
          PATCH=${SEMVER[2]}
          # Semver calculation (default=patch)
          case "${{ inputs.sourceBranchName }}" in
          ${{ inputs.majorBranchPrefix}}*)
            MAJOR=$((MAJOR+1))
            MINOR=0
            PATCH=0
            ;;
          ${{ inputs.minorBranchPrefix}}*)
            MINOR=$((MINOR+1))
            PATCH=0
            ;;
          ${{ inputs.patchBranchPrefix}}*)
            PATCH=$((PATCH+1))
            ;;
          *)
            PATCH=$((PATCH+1))
            ;;
          esac
          echo "::set-output name=next::${MAJOR}.${MINOR}.${PATCH}"

      - name: Tag next version
        uses: actions/github-script@v5
        with:
          script: |-
            github.log.info('Creating release: ${{ steps.semver.outputs.next }}');
            const content = `# Release notes

            ${{ inputs.releaseNotesIntro }}
            `;

            /* https://octokit.github.io/rest.js/v18#repos-create-release */
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.semver.outputs.next }}',
              target_commitish: '${{ github.sha }}',
              body: content,
              generate_release_notes: true
            });

            github.log.info('Done.');